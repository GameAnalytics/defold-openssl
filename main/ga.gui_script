function init(self)
    -- We want input control.  AKA, pump input to the UI
    msg.post(".", "acquire_input_focus")
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

function update(self, dt)
    -- Add update code here
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
    -- handle left clicks.  On left click, see if click was within box
    -- if so change our text (this wont actually be seen), disable ourself and pass a message back
    -- to logo that we are done so it can undim itself
    if(action_id == hash("touch") and action.released == true) then
        local box = gui.get_node("box")
        if(gui.pick_node(box,action.x,action.y)) then
        	gameanalytics.configureUserId("my_custom_id")
            gameanalytics.addBusinessEvent {
                currency = "USD",
                amount = 100,
                itemType = "boost",
                itemId = "megaBoost",
                cartType = "shop"
            }

            local info = sys.get_sys_info()

            if(info.system_name == "Android") then
                gameanalytics.addBusinessEvent {
                    currency = "USD",
                    amount = 100,
                    itemType = "boost",
                    itemId = "megaBoost",
                    cartType = "shop",
                    receipt = "<receipt>",
                    signature = "<signature>"
                }
            end

            if(info.system_name == "iPhone OS") then
                gameanalytics.addBusinessEvent {
                    currency = "USD",
                    amount = 100,
                    itemType = "boost",
                    itemId = "megaBoost",
                    cartType = "shop",
                    receipt = "<receipt>"
                }
            end

            gameanalytics.addResourceEvent {
                flowType = "Sink",
                currency = "gold",
                amount = 10,
                itemType = "lives",
                itemId = "5lives"
            }
            gameanalytics.addResourceEvent {
                flowType = "Source",
                currency = "gold",
                amount = 10,
                itemType = "lives",
                itemId = "5lives"
            }

            gameanalytics.addProgressionEvent {
                progressionStatus = "Start",
                progression01 = "world1"
            }
            gameanalytics.addProgressionEvent {
                progressionStatus = "Fail",
                progression01 = "world1",
                score = 100
            }
            gameanalytics.addProgressionEvent {
                progressionStatus = "Start",
                progression01 = "world1",
                progression02 = "level1"
            }
            gameanalytics.addProgressionEvent {
                progressionStatus = "Complete",
                progression01 = "world1",
                progression02 = "level1",
                score = 100
            }
            gameanalytics.addProgressionEvent {
                progressionStatus = "Start",
                progression01 = "world1",
                progression02 = "level1",
                progression03 = "boss1"
            }
            gameanalytics.addProgressionEvent {
                progressionStatus = "Fail",
                progression01 = "world1",
                progression02 = "level1",
                progression03 = "boss1",
                score = 100
            }

            gameanalytics.addDesignEvent {
                eventId = "design:event"
            }
            gameanalytics.addDesignEvent {
                eventId = "design:event",
                value = 10
            }

            gameanalytics.addErrorEvent {
                severity = "Critical",
                message = "This is a message!!"
            }
            gameanalytics.addErrorEvent {
                severity = "Debug",
                message = "This is a message!!"
            }
            gameanalytics.addErrorEvent {
                severity = "Error",
                message = "This is a message!!"
            }
            gameanalytics.addErrorEvent {
                severity = "Info",
                message = "This is a message!!"
            }
            gameanalytics.addErrorEvent {
                severity = "Warning",
                message = "This is a message!!"
            }

            gameanalytics.setCustomDimension01("ninja")
            gameanalytics.setCustomDimension02("dolphin")
            gameanalytics.setCustomDimension03("horde")

            gameanalytics.setFacebookId("my_facebook_id")

            gameanalytics.setGender("Male")

            gameanalytics.setBirthYear(1982)
        end
    end
end

function on_reload(self)
    -- Add input-handling code here
    -- Remove this function if not needed
end
